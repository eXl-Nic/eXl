char const* irradianceMapPS = 
//"#version 140\n"
#ifdef __ANDROID__
"precision mediump float;\n"
#endif

"#define M_PI 3.1415926535897932384626433832795\n"
"varying vec2 texCoord;\n"
"uniform samplerCube iSkyBox;\n"
//"uniform sampler2D   iPreviousValue;\n"
"uniform int iCubeFace;\n"
"uniform vec3 iPhiComputationRange;\n"
"uniform vec3 iThetaComputationRange;\n"
"\n"
"void main()\n"
"{\n"
"  vec3 normal;\n"
//"  vec3 up;\n"
//"  vec3 right;\n"
"  if(iCubeFace == 4)\n"
"  {\n"
"    normal = normalize(vec3(texCoord.x, texCoord.y, 1));\n"   
"  }\n"
"  else if(iCubeFace==2)\n"
"    normal = normalize( vec3(texCoord.x,  1, -texCoord.y) );\n"
"  else if(iCubeFace==3)\n"
"    normal = normalize( vec3(texCoord.x, -1,  texCoord.y) );\n"
"  else if(iCubeFace==0)\n"
"    normal = normalize( vec3(  1, texCoord.y,-texCoord.x) );\n"
"  else if(iCubeFace==1)\n"
"    normal = normalize( vec3( -1, texCoord.y, texCoord.x) );\n"
"  else if(iCubeFace==5)\n"
"    normal = normalize( vec3(-texCoord.x, texCoord.y, -1) );\n"
"  \n"
//"  gl_FragColor = vec4(abs((normal.xyz + 1.0) / 2.0), 1.0);\n"
//"  gl_FragColor = vec4(texCoord.xy / 2.0 + 0.5, 0.0, 1.0);\n"

"  vec3 up;\n"
"  \n"
"  if(iCubeFace == 4 || iCubeFace == 5)\n"
"    up = vec3(0,1,0);\n"
"  else\n"
"    up = vec3(0,0,1);\n"
"  \n"
"  vec3 right = normalize(cross(up, normal));\n"
"  up = cross(normal, right);\n"
"  \n"
"  vec3 irradiance = vec3(0,0,0);\n"
"  float numSamples = 0.0;\n"
"  for(float phi = iPhiComputationRange.x; phi < iPhiComputationRange.y; phi += iPhiComputationRange.z)\n"
"  {\n"
"    for(float theta = iThetaComputationRange.x; theta < iThetaComputationRange.y; theta += iThetaComputationRange.z)\n"
"    {\n"
"      vec3 tempVec = cos(phi) * right + sin(phi) * up;\n"
"      vec3 sampleVector = cos(theta) * normal + sin(theta) * tempVec;\n"
"      irradiance += texture(iSkyBox, sampleVector) * cos(theta) * sin(theta);\n"
//"      numSamples += 1.0;\n"
"    }\n"
"  }\n"
//"  gl_FragColor = vec4((irradiance * M_PI / numSamples).xyz, 1.0);\n"
"  gl_FragColor = vec4(irradiance, 1.0);\n"

"}\n"
;